name: PlatformIO CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        example:
        - examples/Alert/Alert/
        - examples/Float/Float/
        - examples/Integer/Integer/
        - examples/OneShot/OneShot/
        - examples/LCD-I2C/LCD-I2C/
        - examples/W5100-Thingspeak/W5100-Thingspeak/

    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Run PlatformIO
      run: pio ci --lib="." --project-conf $PROJECT_CONF
      env:
        PLATFORMIO_CI_SRC: ${{ matrix.example }}
        PROJECT_CONF: "${{ matrix.example }}/../platformio.ini"
